<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="but_Ins.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column3.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column4.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column5.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column6.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>